/home/jiachen/miniconda3/envs/qwen3/lib/python3.10/site-packages/transformers/utils/hub.py:107: FutureWarning: Using `TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.
  warnings.warn(
The image processor of type `Qwen2VLImageProcessor` is now loaded as a fast processor by default, even if the model checkpoint was saved with a slow processor. This is a breaking change and may produce slightly different outputs. To continue using the slow processor, instantiate this class with `use_fast=False`. Note that this behavior will be extended to all models in a future release.
`torch_dtype` is deprecated! Use `dtype` instead!

Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]
Loading checkpoint shards:  50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:00<00:00,  1.07it/s]
Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:01<00:00,  1.34it/s]
Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:01<00:00,  1.29it/s]


======================================================================
V20 Vision-Grounded VLM Pipeline - Image 2376855
======================================================================

Step 1: Loading Visual Genome data...
âœ“ Loaded 32 objects
Loading image for VLM...
âœ“ Image loaded: (500, 332)

Step 2: Building V20 vision-grounded 3-level hierarchy...

Building V20 vision-grounded VLM-guided 3-level hierarchy...
Processing 23 unique objects with VLM selector

Hierarchy built:
  Fine-grained: 23 concepts
  Mid-level: 14 concepts
  Coarse-level: 10 concepts
  Compression: 1.64x (Fineâ†’Mid), 2.30x (Fineâ†’Coarse)

VLM Performance:
  VLM Success: 10/23 (43.5%)
  Fallback: 9/23 (39.1%)

Step 3: Visualizing original scene graph...

Creating scene graph visualization...
Saved scene graph: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/original_scene_graph.png

Step 4: Creating hierarchical ontology tree...

Creating hierarchy tree visualization...
Saved hierarchy tree: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/hierarchical_ontology_tree.png

Step 5: Creating merged scene graphs...

Visualizing merged fine-grained scene graph...
Saved merged fine-grained visualization: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/merged_fine.png

Visualizing merged mid-grained scene graph...
Saved merged mid-grained visualization: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/merged_mid.png

Visualizing merged coarse-grained scene graph...
Saved merged coarse-grained visualization: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/merged_coarse.png

Step 6: Creating merged comparison...

Step 7: Analyzing WordNet paths...
âœ“ Saved WordNet paths tree: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/wordnet_paths_tree.png
âœ“ Saved merge analysis: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/wordnet_merge_analysis.png
âœ“ Saved depth distribution: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/depth_distribution.png

Step 8: Creating merged concepts flow diagrams...

Creating concept flow diagram...
âœ“ Saved concept flow diagram: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/merged_concepts_flow.png

Creating concept hierarchy table...
âœ“ Saved concept hierarchy table: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/concept_hierarchy_table.png

Creating compression analysis...
âœ“ Saved compression analysis: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/compression_analysis.png

Step 9: Creating graph structure visualizations...
âœ“ Saved fine-grained graph: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/graph_structure_fine.png
âœ“ Saved mid-grained graph: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/graph_structure_mid.png
âœ“ Saved coarse-grained graph: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/graph_structure_coarse.png
âœ“ Saved combined graph comparison: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/graph_structure_comparison.png

Step 10: Generating reports...
âœ“ Saved WordNet analysis report: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/wordnet_analysis_report.txt

Generating concept mapping report...
âœ“ Saved concept mapping report: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/concept_mapping_report.txt
âœ“ Saved graph statistics report: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/graph_structure_report.txt
âœ“ V20 method report: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855/v20_vision_grounded_method_report.txt

======================================================================
âœ… V20 Pipeline Complete!
======================================================================

Output directory: /nas/jiachen/graph_reasoning/HCNMN/inspect/batch_results/v20/sample_2376855/sample_2376855
Generated 25+ visualization files and reports

Key results:
  - VLM success rate: 10/23 (43.5%)
  - Compression: 23 â†’ 14 â†’ 10 concepts
  - Fineâ†’Coarse: 2.30x compression

ðŸŽ‰ Success! Check output directory for visualizations and reports.

